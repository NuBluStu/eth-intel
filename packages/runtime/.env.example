MODE=duckdb
RPC_HTTP=http://127.0.0.1:8545
RPC_WS=ws://127.0.0.1:8546
DUCKDB_PATH=~/eth-index/eth.duckdb
RETENTION_DAYS=14
LLM_BASE_URL=http://127.0.0.1:11434/v1
LLM_MODEL=llama3.1:8b

# ===== TRADING MODE CONFIGURATION =====
# CRITICAL: This determines if real transactions are executed!
# Options: simulation, testnet, mainnet
TRADING_MODE=simulation

# Must be explicitly set to 'true' for real transactions
# Required for mainnet mode, optional for testnet
EXECUTE_REAL_TRADES=false

# Network name (for testnet mode)
# Options: goerli, sepolia
TESTNET_NAME=goerli

# Require manual confirmation before trades (recommended for mainnet)
REQUIRE_CONFIRMATION=true

# ===== WALLET CONFIGURATION =====
# CRITICAL: Never share or commit your private key!
# To use with real funds:
# 1. Copy this file to .env
# 2. Add your actual private key and address
# 3. NEVER commit .env to git

# Your wallet private key (without 0x prefix)
# Example: abc123def456... (64 hex characters)
# ONLY REQUIRED FOR TESTNET/MAINNET MODES
PRIVATE_KEY=

# Your wallet address
# Example: 0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb
WALLET_ADDRESS=

# ===== TRADING CONFIGURATION =====
# Initial capital in ETH for trading
INITIAL_CAPITAL_ETH=0.05

# Maximum trade size per transaction (safety limit)
MAX_TRADE_SIZE_ETH=0.01

# Maximum gas price you're willing to pay (in gwei)
MAX_GAS_PRICE=50

# Slippage tolerance for trades (0.005 = 0.5%)
SLIPPAGE_TOLERANCE=0.005

# ===== SAFETY LIMITS =====
# Stop loss percentage (5 = 5% loss)
STOP_LOSS_PERCENT=5

# Take profit percentage (30 = 30% gain)
TAKE_PROFIT_PERCENT=30

# Maximum position size in ETH
MAX_POSITION_SIZE_ETH=0.01

# Emergency stop - set to 'true' to halt all trading
EMERGENCY_STOP=false

# ===== OPTIONAL API KEYS =====
ETHERSCAN_API_KEY=
INFURA_PROJECT_ID=

# ===== ALCHEMY CONFIGURATION (OPTIMIZED FOR ARBITRAGE) =====
# Get your API key from: https://dashboard.alchemy.com/
ALCHEMY_API_KEY=
ALCHEMY_MAINNET_HTTP=https://eth-mainnet.g.alchemy.com/v2/
ALCHEMY_MAINNET_WS=wss://eth-mainnet.g.alchemy.com/v2/

# Use Alchemy for time-sensitive trading operations
# Set to true for faster arbitrage detection (10-50ms advantage)
USE_ALCHEMY_FOR_TRADING=false

# Use Alchemy's private mempool to protect against frontrunning
USE_ALCHEMY_PRIVATE_MEMPOOL=false

# Alchemy enhanced APIs
ALCHEMY_ENABLE_TRACE_API=false
ALCHEMY_ENABLE_DEBUG_API=false